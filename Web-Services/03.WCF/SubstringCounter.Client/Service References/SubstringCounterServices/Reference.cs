//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SubstringCounter.Client.SubstringCounterServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SubstringCounterServices.ISubstringCounter")]
    public interface ISubstringCounter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubstringCounter/GetOccurrences", ReplyAction="http://tempuri.org/ISubstringCounter/GetOccurrencesResponse")]
        int GetOccurrences(string toBeMatched, string toCountFrom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISubstringCounter/GetOccurrences", ReplyAction="http://tempuri.org/ISubstringCounter/GetOccurrencesResponse")]
        System.Threading.Tasks.Task<int> GetOccurrencesAsync(string toBeMatched, string toCountFrom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISubstringCounterChannel : SubstringCounter.Client.SubstringCounterServices.ISubstringCounter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubstringCounterClient : System.ServiceModel.ClientBase<SubstringCounter.Client.SubstringCounterServices.ISubstringCounter>, SubstringCounter.Client.SubstringCounterServices.ISubstringCounter {
        
        public SubstringCounterClient() {
        }
        
        public SubstringCounterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SubstringCounterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubstringCounterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SubstringCounterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetOccurrences(string toBeMatched, string toCountFrom) {
            return base.Channel.GetOccurrences(toBeMatched, toCountFrom);
        }
        
        public System.Threading.Tasks.Task<int> GetOccurrencesAsync(string toBeMatched, string toCountFrom) {
            return base.Channel.GetOccurrencesAsync(toBeMatched, toCountFrom);
        }
    }
}
